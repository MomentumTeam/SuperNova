syntax = "proto3";

package Kartoffel;

service Kartoffel {

    //Entities
    rpc CreateEntity(CreateEntityRequest) returns (Entity){}
    rpc GetEntityByDI(GetEntityByDIRequest) returns (Entity){}
    rpc GetEntityByRoleId(GetEntityByRoleIdRequest) returns (Entity){}
    rpc GetEntitiesUnderOG(GetEntitiesUnderOGRequest) returns (EntityArray){}
    rpc GetEntitiesByHierarchy(GetEntitiesByHierarchyRequest) returns (EntityArray){}
    rpc GetEntityByIdentifier(GetEntityByIdentifierRequest) returns (Entity){}
    rpc SearchEntitiesByFullName(SearchEntitiesByFullNameRequest) returns (EntityArray){}
    rpc GetEntityById(GetEntityByIdRequest) returns (Entity){}
    rpc GetPictureByEntityId(GetPictureByEntityIdRequest) returns (Image){}
    rpc DeleteEntity(DeleteEntityRequest) returns (SuccessMessage){}
    rpc UpdateEntity(UpdateEntityRequest) returns (Entity){}
    rpc ConnectEntityAndDI(ConnectEntityAndDIRequest) returns (SuccessMessage){}
    rpc DisconnectDIFromEntity(DisconnectDIFromEntityRequest) returns (SuccessMessage){}
    rpc SearchCommandersByFullName(SearchCommandersByFullNameRequest) returns (EntityArray){}
    
    //Groups
    rpc CreateOG(CreateOGRequest) returns (OrganizationGroup){}        
    rpc GetAllOGs(GetAllOGsRequest) returns (OGArray){}        
    rpc GetOGByHierarchyName(GetOGByHierarchyNameRequest) returns (OrganizationGroup){}   
    rpc SearchOG(SearchOGRequest) returns (OGArray) {}          
    rpc GetChildrenOfOG(GetChildrenOfOGRequest) returns (OGArray){}
    rpc GetChildrenOfRootOG(GetChildrenOfRootOGRequest) returns (OGArray){}
    rpc GetOGById(GetOGByIdRequest) returns (OrganizationGroup){}   
    rpc GetOGTree(GetOGTreeRequest) returns (OGTree){}
    rpc DeleteOG(DeleteOGRequest) returns (SuccessMessage){}            
    rpc UpdateOGParent(UpdateOGParentRequest) returns (SuccessMessage){}
    rpc RenameOG(RenameOGRequest) returns (SuccessMessage){}
    rpc GetPrefixByOGId(GetPrefixByOGIdRequest) returns (OGPrefix){}

    //DI    
    rpc CreateDI(CreateDIRequest) returns (DigitalIdentity){}
    rpc GetAllDIs(GetAllDIsRequest) returns (DigitalIdentities){}
    rpc GetDIByRoleId(GetDIByRoleIdRequest) returns (DigitalIdentity){}
    rpc SearchDIOrUniqueId(SearchDIOrUniqueIdRequest) returns (DigitalIdentities){}
    rpc GetDIByUniqueId(GetDIByUniqueIdRequest) returns (DigitalIdentity){} 
    rpc DeleteDI(DeleteDIRequest) returns (SuccessMessage){}  
    rpc UpdateDI(UpdateDIRequest) returns (SuccessMessage){} 

    // Roles
    rpc CreateRole(CreateRoleRequest) returns (Role){}
    rpc GetAllRoles(GetAllRolesRequest) returns (RoleArray){}
    rpc GetRoleByRoleId(GetRoleByRoleIdRequest) returns (Role){}
    rpc GetRolesUnderOG(GetRolesUnderOGRequest) returns (RoleArray){}
    rpc ConnectRoleAndDI(ConnectRoleAndDIRequest) returns (SuccessMessage){}
    rpc DisconnectRoleAndDI(DisconnectRoleAndDIRequest) returns (SuccessMessage){}
    rpc DeleteRole(DeleteRoleRequest) returns (SuccessMessage){} 
    rpc RenameRole(RenameRoleRequest) returns (SuccessMessage){}
    rpc ChangeRoleOG(ChangeRoleOGRequest) returns (SuccessMessage){}
    rpc IsRoleAlreadyTaken(IsRoleAlreadyTakenReq) returns (IsRoleAlreadyTakenRes){}
    rpc IsJobTitleAlreadyTaken(IsJobTitleAlreadyTakenReq) returns (IsJobTitleAlreadyTakenRes){}
}

message IsRoleAlreadyTakenReq{
    string roleId = 1;
}

message IsRoleAlreadyTakenRes{
    bool isRoleAlreadyTaken = 1;
}

message IsJobTitleAlreadyTakenReq{
    string jobTitle = 1;
    string directGroup = 2;
}

message IsJobTitleAlreadyTakenRes{
    bool isJobTitleAlreadyTaken = 1;
    repeated string suggestions = 2;
}

message SearchCommandersByFullNameRequest{
    string fullName = 1;
    optional string source = 2;
}

message GetAllOGsRequest{
    string source = 1;
    string akaUnit = 2;
    string updatedFrom = 3;
    int32 page = 4;
    int32 pageSize = 5;
}

message UpdateDIRequest{
    string id = 1;
    bool isRoleAttachable = 2;
    string mail = 3;
}

message GetDIByUniqueIdRequest{
    string id = 1;
}

message SearchDIOrUniqueIdRequest{
    string unique_id = 1;
}

message GetDIByRoleIdRequest{
    string roleId = 1;
}

message DigitalIdentities{
    repeated DigitalIdentity digitalIdentities = 1;
}

message GetAllDIsRequest{
    string updatedFrom = 1;
    int32 page = 2;
    int32 pageSize = 3;
}

message UpdateOGParentRequest{
    string id = 1;
    string parentId =2;
    string parent = 3;
}

message GetOGByIdRequest{
    string id = 1;
}

message GetOGByHierarchyNameRequest{
    string hierarchy = 1;
}

message DeleteEntityRequest{
    string id = 1;
}

message GetEntityByIdentifierRequest{
    string identifier = 1;
}

message GetEntitiesByHierarchyRequest{
    string hierarchy = 1;
    bool direct = 2;
    int32 page = 3;
    int32 pageSize = 4;
}

message GetEntityByDIRequest{
    string uniqueId = 1;
}


message UpdateEntityRequest{
    string id = 1;
    UpdateEntityProperties properties = 2;
}

message UpdateEntityProperties{
    optional string firstName = 1;
    optional string lastName = 2;
    optional string identityCard = 3;
    optional string personalNumber = 4;
    optional string serviceType = 5;
    repeated string phone = 6;
    repeated string mobilePhone = 7;
    optional string address = 8;
    optional string clearance = 9;
    optional string sex = 10;
    optional string birthDate = 11;
    optional string entityType = 12;
    optional string akaUnit = 13;
    optional string dischargeDay = 14;
    optional string rank = 15;
}

message RenameOGRequest{
    string id = 1;
    string name = 2;
}

message GetPictureByEntityIdRequest{
    string id = 1;
}
message Image {
    string image = 1;
}

// SearchEntitiesByFullName
message SearchEntitiesByFullNameRequest{
    string fullName = 1;
    optional string rank = 2;
    optional string entityType = 3;
    optional string underGroupId = 4;
    optional string status = 5;
    optional string source = 6;
}

message GetOGTreeRequest{
    string directGroupId = 1;
}

message OGTree{
    string id = 1;
    string label = 2;
    repeated OGTree children = 3;
}

// SearchOG
message SearchOGRequest{
    string nameAndHierarchy = 1;
}

message OGArray{
    repeated OrganizationGroup groups = 1;
}

message GetPrefixByOGIdRequest{
    string id = 1;
}

message OGPrefix {
    string prefix = 1;
}

// CreateOG
message CreateOGRequest{
    string name = 1;
    string parent = 2;
    string source = 3;
}

// CreateDI
message CreateDIRequest{
    bool isRoleAttachable = 1;
    string mail = 2;
    string source = 3;
    string type = 4;
    string uniqueId = 5;
}
/**  ROLES **/

// GetAllRoles
message GetAllRolesRequest {
    string updatedFrom = 1;
    int32 page = 2;
    int32 pageSize = 3;
}

// CreateRole
message CreateRoleRequest{
    string jobTitle = 1;
    string directGroup = 2;
    string source = 3;
    string roleId = 4;
}

// DeleteRole
message DeleteRoleRequest{
    string roleId = 1;
}

// RenameRole
message RenameRoleRequest{
    string roleId = 1;
    string jobTitle = 2;
}

// ConnectRoleAndDI
message ConnectRoleAndDIRequest{
    string roleId = 1; // id of role
    string uniqueId = 2; //uniqueId of DI
}

// DisconnectRoleAndDI
message DisconnectRoleAndDIRequest {
    string roleId = 1; // id of role
    string uniqueId = 2; //uniqueId of DI
}

// GetRoleByRoleId
message GetRoleByRoleIdRequest{
    string roleId = 1;
}

// GetRolesUnderOG
message GetRolesUnderOGRequest{
    string groupId = 1;
    bool direct = 2;
    int32 page = 3;
    int32 pageSize = 4;
}

// GetRolesByDI
message GetRoleByDIRequest {
    string uniqueId = 1;
}

// GetRolesByHierarchy
message GetRolesByHierarchyRequest {
    string hierarchy = 1;
    bool direct = 2;
    int32 page = 3;
    int32 pageSize = 4;
}

// ChangeRoleOG
message ChangeRoleOGRequest {
    string roleId = 1;
    string groupId = 2;
}

message EntityArray{
    repeated Entity entities = 1;
}

message RoleArray{
    repeated Role roles = 1;
}

// ConnectEntityAndDI
message ConnectEntityAndDIRequest{
    string id = 1; //mongoId of entity
    string uniqueId = 2; //uniqueId of DI (taken from the role)
}

// CreateEntity
message CreateEntityRequest{
    optional string firstName = 1;
    optional string lastName = 2;
    optional string identityCard = 3;
    optional string personalNumber = 4;
    optional string serviceType = 5;
    repeated string phone = 6;
    repeated string mobilePhone = 7;
    optional string address = 8;
    optional string clearance = 9;
    optional string sex = 10;
    optional string birthDate = 11;
    optional string entityType = 12;
    optional string akaUnit = 13;
    optional string dischargeDay = 14;
    optional string rank = 15;
}

// GetEntityByRoleId
message GetEntityByRoleIdRequest{
    string roleId = 1;
}

// DisconnectDIFromEntity
message DisconnectDIFromEntityRequest{
    string id = 1; //mongoId of entity
    string uniqueId = 2; //uniqueId of DI (taken from the role)
}

// GetEntityByMongoId
message GetEntityByIdRequest{
    string id = 1; //mongoId of entity
    optional bool withPicture = 2;
}

// DeleteOG
message DeleteOGRequest{
    string id = 1; //mongoId of OG
}

// GetChildrenOfOG
message GetChildrenOfOGRequest{
    string id = 1; //mongoId of OG
    int32 page = 2;
    int32 pageSize = 3;
    bool direct = 4;
}

// GetChildrenOfRootOG
message GetChildrenOfRootOGRequest{

}

// DeleteDI
message DeleteDIRequest{
    string id = 1; //uniqueId of DI (taken from the role)
}

// GetEntitiesUnderOG
message GetEntitiesUnderOGRequest{
    string id = 1; //mongoIds of OG
    bool direct = 2;
    int32 page = 3;
    int32 pageSize = 4;
}

//SuccessMessage
message SuccessMessage{
    bool success = 1;
}

// Kartoffel messages

message OrganizationGroup{
    string id = 1;
    string name = 2;
    string source = 3;
    repeated string ancestors = 4;
    string hierarchy = 5;
    string status = 6;
    bool isLeaf = 7;
    string createdAt = 8;
    string updatedAt = 9;
    repeated Entity directEntities = 10;
    repeated Role directRoles = 11;
}

message Role{
    string roleId = 1;
    string jobTitle = 2;
    string digitalIdentityUniqueId = 3;
    string directGroup = 4;
    string hierarchy = 5;
    repeated string hierarchyIds = 6;
    string clearance = 7;
    string source = 8;
    string createdAt = 9;
    string updatedAt = 10;
}


message Entity{
    string id = 1;
    string displayName = 2;
    string directGroup = 3;
    string hierarchy = 4;
    string entityType = 5;
    string identityCard = 6;
    string personalNumber = 7;
    string serviceType = 8;
    string firstName = 9;
    string lastName = 10;
    string fullName = 11;
    string akaUnit = 12;
    string dischargeDay = 13;
    string rank = 14;
    string mail = 15;
    string jobTitle = 16;
    repeated string phone = 17;
    repeated string mobilePhone = 18;
    string address = 19;
    string clearance = 20;
    string sex = 21;
    string birthDate = 22;
    string createdAt = 23;
    string updatedAt = 24;
    repeated DigitalIdentity digitalIdentities = 25;
    string picture = 26;
    string goalUserID = 27;
}

message DigitalIdentity{
    string type = 1;      
    string source = 2;       
    string mail = 3;         
    string uniqueId = 4;      
    string entityId = 5;      
    string createdAt = 6;      
    string updatedAt = 7;    
    bool isRoleAttachable = 8;   
    Role role = 9;        
}
