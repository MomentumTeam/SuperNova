version: '3.8'
services:
  # nginx-server:
  #   image: nginx:latest
  #   container_name: nginx-server
  #   volumes:
  #     - ./nginx.conf:/etc/nginx/nginx.conf
  #   depends_on:
  #     - api-gateway
  #     - authentication-service
  #     - supernova-ui
  #   ports:
  #     - 80:80
  #     - 443:443

  mongo:
    image: mongo:latest
    container_name: mongo
    environment:
      - PUID=1000
      - PGID=1000
    volumes:
      - ./data/db:/data/db
    ports:
      - 27017:27017
    restart: unless-stopped

  redis:
    image: redis:alpine
    container_name: redis
    command: redis-server --appendonly yes --requirepass "mozart"
    volumes:
      - ./data/data:/data
    ports:
      - 6379:6379
    restart: unless-stopped

  spike-service:
    image: spike-service
    build: ./spike-service
    env_file:
      - ./supernova.env
    ports:
      - '8080:8080'
    depends_on:
      - redis
    volumes:
      - spike-utils:/spikeUtils
      - logs:/logs
    environment:
      - SS_REDIS_HOST=redis
      - SS_REDIS_PORT=6379
      - SS_REDIS_PASSWORD=mozart
      - SS_SPIKE_PUBLIC_KEY_FULL_PATH=/spikeUtils/publickey.pem
      - SS_SHMUEL_AUDIENCE=shmuel
      - SS_KARTOFFEL_AUDIENCE=kartoffel
      - SS_LOG_PATH=/logs

  request-service:
    image: request-service
    build: ./request-service
    env_file:
      - ./supernova.env
    ports:
      - '8081:8080'
    depends_on:
      - mongo
      - notification-service
      - tea-service
      - mail-service
      # - approver-service
    volumes:
      - logs:/logs
    environment:
      - RS_MONGO_URL=mongodb://mongo:27017/supernova
      - RS_NS_URL=notification-service:8080
      - RS_TS_URL=tea-service:8080
      - RS_MS_URL=mail-service:8080
      - RS_APS_URL=approver-service:8080
      - RS_ROOT_ID=619e3193f235dc001846bb4f
      - RS_KARTOFFEL_GOAL_USER=GoalUser
      - RS_LOG_PATH=/logs

  kartoffel-service:
    image: kartoffel-service
    build: ./kartoffel-service/
    env_file:
      - ./supernova.env
    ports:
      - '8082:8080'
    depends_on:
      - spike-service
    volumes:
      - logs:/logs
    environment:
      - KS_USE_FAKER=false
      - KS_SS_URL=spike-service:8080
      - KS_ROOT_ID=6184af202da776001134110b
      - KS_DEFAULT_ROLE_SOURCE=sf_name
      - KS_DEFAULT_DI_SOURCE=es_name
      - KS_DEFAULT_OG_SOURCE=sf_name
      - KS_DI_SOURCES=es_name,es_name
      - KS_DEFAULT_ROLE_ID_SUFFIX=oneTree
      - KS_SEARCH_WITH_RANKS=true
      - KS_LOG_PATH=/logs

  producer-service:
    image: producer-service
    build: ./producer-service/
    env_file:
      - ./supernova.env
    ports:
      - '8083:8080'
    depends_on:
      - request-service
      - spike-service
    volumes:
      - logs:/logs
    environment:
      - PS_QUEUE_API_URL=http://20.199.120.227:3000
      - PS_RS_URL=request-service:8080
      - PS_DEV_MODE=true
      - PS_SS_URL=spike-service:8080
      - PS_SHMUEL_AUDIENCE=shmuel
      - PS_OLD_DOMAIN=oldDomain
      - PS_NEW_DOMAIN=newDomain
      - PS_RESTRICT_AD_ACCESS=false
      - PS_AD_ALLOWED_SUBMITTERS=1111,2222,3333,4444
      - PS_AD_UPN_SUFFIX=gmail.com
      - PS_KARTOFFEL_GOAL_USER=GoalUser
      - PS_KARTOFFEL_SOLDIER=Soldier
      - PS_KARTOFFEL_EXTERNAL=External
      - PS_LOG_PATH=/logs

  notification-service:
    image: notification-service
    build: ./notification-service/
    env_file:
      - ./supernova.env
    volumes:
      - logs:/logs
    ports:
      - '8084:8080'
    environment:
      - NS_MONGO_URL=mongodb://mongo:27017/supernova
      - NS_LOG_PATH=/logs

  approver-service:
    image: approver-service
    build: ./approver-service/
    env_file:
      - ./supernova.env
    ports:
      - '8085:8080'
    depends_on:
      - request-service
      - kartoffel-service
    volumes:
      - logs:/logs
    environment:
      - APS_MONGO_URL=mongodb://mongo:27017/supernova
      - APS_KS_URL=kartoffel-service:8080
      - APS_RS_URL=request-service:8080
      - APS_OG_VALIDATION_DEPTH=4
      - APS_ALWAYS_VALID_COMMANDERS=1111,2222,3333,4444
      - APS_CREATE_EXTERNAL_ALLOWED_APPROVERS=619e3193f235dc001846bb4f,619a44fe5ce9f30018d8abba
      - APS_LOG_PATH=/logs

  tea-service:
    image: tea-service
    build: ./tea-service/
    env_file:
      - ./supernova.env
    volumes:
      - logs:/logs
      - ./tea-service/src/excelFiles:/teaUtils
    ports:
      - '8086:8080'
    environment:
      - TS_KS_URL=kartoffel-service:8080
      - TS_MONGO_URL=mongodb://mongo:27017/supernova
      - TS_LOG_PATH=/logs
      - TS_NEED_INIT=true
      - TS_INIT_EMPTY_ARRAYS=true
      - TS_EXCEL_INIT_FOLDER=/teaUtils
      - TS_EXCEL_INIT_FILE=initPrefixes.xlsx
      - TS_OLD_SUFFIX=gmail.com
      - TS_NEW_SUFFIX=gmail.com
      - TS_BROL=brol

  bulk-service:
    image: bulk-service
    build: ./bulk-service/
    env_file:
      - ./supernova.env
    volumes:
      - bulk-files:/bulkFiles
      - logs:/logs
    ports:
      - '8087:8080'
    depends_on:
      - request-service
      - tea-service
    environment:
      - BS_RS_URL=request-service:8080
      - BS_DEFAULT_ROLE_SUFFIX=sf_name
      - BS_DEFAULT_ROLE_SOURCE=sf_name
      - BS_FOLDER_PATH=/bulkFiles
      - BS_KARTOFFEL_DOMAIN_USER=domainUser
      - BS_CRH_EXAMPLE_FILE=changeRoleHierarchyBulk.xlsx
      - BS_CR_EXAMPLE_FILE=createRoleBulk.xlsx
      - BS_SOLDIER=Soldier
      - BS_RESERVED=Reserved
      - BS_CIVILIAN=Civilian
      - BS_GOAL_USER=GoalUser
      - BS_LOG_PATH=/logs

  mail-service:
    image: mail-service
    build: ./mail-service/
    env_file:
      - ./supernova.env
    volumes:
      - logs:/logs
    ports:
      - '8088:8080'
    depends_on:
      - kartoffel-service
    environment:
      - MS_KS_URL=kartoffel-service:8080
      - MS_MAIL_SERVICE=hotmail
      - MS_MAIL_ADDRESS=mayatest4321@outlook.com
      - MS_MAIL_USER=mayatest4321@outlook.com
      - MS_MAIL_PASSWORD=testpass4321
      - MS_MAIL_SERVER_HOST=smtp.office365.com
      - MS_MAIL_SERVER_PORT=587
      - MS_MAIL_SERVER_SECURE=false
      - MS_IS_TEST=true
      - MS_EMAILS_FOR_TEST=enterEmailForTest
      - MS_LEGO_ADDRESS=http://localhost:3000

  kartoffel-consumer:
    image: kartoffel-consumer
    build: ./kartoffel-consumer/
    env_file:
      - ./supernova.env
    depends_on:
      - request-service
      - kartoffel-service
      - tea-service
    volumes:
      - logs:/logs
    environment:
      - KC_KAFKA_HOSTS=google.com:9092,amazon.com:9092,ebay.com:9092
      - KC_KAFKA_GROUP_ID=kafka-kartoffel
      - KC_KAFKA_TOPIC=baraktest
      - KC_KAFKA_USERNAME=guest
      - KC_KAFKA_PASSWORD=password
      - KC_RS_URL=request-service:8080
      - KC_TS_URL=tea-service:8080
      - KC_KS_URL=kartoffel-service:8080
      - KC_DEFAULT_ROLE_SOURCE=sf_name
      - KC_DEFAULT_DI_SOURCE=es_name
      - KC_DI_SOURCES=es_name,es_name
      - KC_KARTOFFEL_GOAL_USER=GoalUser
      - KC_KARTOFFEL_DOMAIN_USER=domainUser
      - KC_CIVILIAN=Civilian
      - KC_SEND_UPN_TO_KARTOFFEL=true
      - KC_CIVILIAN_DEFAULT_RANK=לא ידוע
      - KC_LOG_PATH=/logs

  execution-script:
    image: execution-script
    build: ./execution-script/
    env_file:
      - ./supernova.env
    depends_on:
      - request-service
      - producer-service
    volumes:
      - logs:/logs
    environment:
      - EXS_RS_URL=request-service:8080
      - EXS_PS_URL=producer-service:8080
      - EXS_APS_URL=approver-service:8080
      - EXS_MINUTE=5
      - EXS_CRON_JOB=false
      - EXS_ROOT_ID=619e3193f235dc001846bb4f
      - EXS_LOG_PATH=/logs

  whiteListSync-script:
    image: whitelistsync-script
    build: ./whiteListSync-script/
    env_file:
      - ./supernova.env
    depends_on:
      - approver-service
    volumes:
      - logs:/logs
    environment:
      - WLS_APS_URL=approver-service:8080
      - WLS_HOUR=10
      - WLS_MINUTE=0
      - WLS_CRON_JOB=false
      - WLS_LOG_PATH=/logs

  # approvers-init-script:
  #   image: approvers-init-script
  #   build: ./approvers-init-script/
  #   env_file:
  #     - ./supernova.env
  #   depends_on:
  #     - approver-service
  #     - kartoffel-service
  #   volumes:
  #     - logs:/logs
  #     - ais-excel-files:/excelFiles
  #     # - /home/reuven/SuperNova/approvers-init-script/src/excelFiles:/excelFiles
  #   environment:
  #     - AIS_KS_URL=kartoffel-service:8080
  #     - AIS_APS_URL=approver-service:8080
  #     - AIS_EXCEL_FILE_PATH=/excelFiles/AISExcelFile.xlsx
  #     - AIS_LOG_PATH=/logs

  # population-script:
  #   image: population-script
  #   build: ./population-script/
  #   env_file:
  #     - ./supernova.env
  #   depends_on:
  #     - request-service
  #   environment:
  #     - POS_RS_URL=request-service:8080
  #     - POS_ENTITY_IDS=aaaaaaaaaaaaaaaaaaaaaaaa,bbbbbbbbbbbbbbbbbbbbbbbb
  #     - POS_GENERATE_COUNT=50
  #     - POS_LOG_PATH=/logs

  authentication-service:
    image: authentication-service
    build: ./authentication-service/
    env_file:
      - ./supernova.env
    ports:
      - '9000:8080'
    depends_on:
      - kartoffel-service
      - approver-service
    volumes:
      - logs:/logs
    environment:
      - AS_PORT=8080
      - AS_SHRAGA_URL=https://shraga.shraga.branch-yesodot.org
      # - AS_CLIENT_ENDPOINT=http://localhost
      - AS_CLIENT_ENDPOINT=http://localhost:3000
      - AS_KS_URL=kartoffel-service:8080
      - AS_APS_URL=approver-service:8080
      - AS_KARTOFFEL_ENRICH=false
      - AS_APPROVER_ENRICH=true
      - AS_USE_SHRAGA_LOCAL_MAP=true
      - AS_SHRAGA_LOCAL_MAP_IDS=619e3a6fe4de0300121d78c7,619e406ee4de0300121dc4c8,619e42b6e4de0300121dc4e3,619e5132e4de0300121dc528,619f8aa0e4de0300121dd3f4
      - AS_SHRAGA_LOCAL_MAP_DIS=t23458789sh@jello,t25458789sh@jello,t25458711sh@jello,gggUsersh@rabiran,e595300134sh@turtle
      - AS_LOG_PATH=/logs

  api-gateway:
    image: api-gateway
    build: ./api-gateway/
    env_file:
      - ./supernova.env
    volumes:
      - bulk-files:/bulkFiles
      - spike-utils:/spikeUtils
      - logs:/logs
    ports:
      - '2000:8080'
    depends_on:
      - spike-service
      - kartoffel-service
      - producer-service
      - request-service
      - authentication-service
      - notification-service
      - mail-service
      - approver-service
      - tea-service
      - bulk-service
    # - apm-server
    environment:
      - GATEWAY_KS_URL=kartoffel-service:8080
      - GATEWAY_RS_URL=request-service:8080
      - GATEWAY_PS_URL=producer-service:8080
      - GATEWAY_NS_URL=notification-service:8080
      - GATEWAY_AS_URL=http://localhost:9000
      # - GATEWAY_AS_URL=http://localhost
      - GATEWAY_BS_URL=bulk-service:8080
      - GATEWAY_APS_URL=approver-service:8080
      - GATEWAY_BS_FOLDER_PATH=/bulkFiles
      - GATEWAY_AUTHENTICATION_REQUIRED=true
      - GATEWAY_APM_URL=http://apm-server:8200
      - GATEWAY_TS_URL=tea-service:8080
      - GATEWAY_SPIKE_AUDIENCE_ID=bwwIB0gSS0xay_odirl0OCAJ3gUlXkKMKijbDY_e
      - GATEWAY_SPIKE_PUBLIC_KEY_FULL_PATH=/spikeUtils/publickey.pem
      - GATEWAY_WRITE_SCOPE_NAME=write
      - GATEWAY_SUPPORT_LINK=https://www.lego.com/en-us/service
      - GATEWAY_ROOT_ID=619e3193f235dc001846bb4f
      - GATEWAY_LOG_PATH=/logs

  supernova-ui:
    image: supernova-ui
    build: ./SuperNovaUI/
    env_file:
      - ./supernova.env
    depends_on:
      - api-gateway
    ports:
      - '3000:80'
    environment:
      - UI_REACT_APP_BASE_URL=http://localhost:2000
      - UI_REACT_TOKEN_NAME=sp-token
      - UI_USER_SOURCE_DI=es_name

volumes:
  bulk-files:
  spike-utils:
  ais-excel-files:
  tea-utils:
  logs:
  esdata:
    driver: local

  # # Kafka GUI
  # kouncil:
  #   image: consdata/kouncil:latest
  #   ports:
  #     - '4001:8080'
  #   environment:
  #     bootstrapServers: 'kafka:29092'
  #   depends_on:
  #     - 'kafka'
  # kafka:
  #   image: obsidiandynamics/kafka
  #   container_name: kafka
  #   ports:
  #     - '2181:2181'
  #     - '9092:9092'
  #   environment:
  #     KAFKA_LISTENERS: 'INTERNAL://:29092,EXTERNAL://:9092'
  #     KAFKA_ADVERTISED_LISTENERS: 'INTERNAL://kafka:29092,EXTERNAL://localhost:9092'
  #     KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: 'INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT'
  #     KAFKA_INTER_BROKER_LISTENER_NAME: 'INTERNAL'
  #     KAFKA_ZOOKEEPER_SESSION_TIMEOUT: '6000'
  #     KAFKA_RESTART_ATTEMPTS: '10'
  #     KAFKA_RESTART_DELAY: '5'
  #     ZOOKEEPER_AUTOPURGE_PURGE_INTERVAL: '0'

  # apm-server:
  #   image: docker.elastic.co/apm/apm-server:7.15.0
  #   depends_on:
  #     elasticsearch:
  #       condition: service_healthy
  #     kibana:
  #       condition: service_healthy
  #   cap_add: ['CHOWN', 'DAC_OVERRIDE', 'SETGID', 'SETUID']
  #   cap_drop: ['ALL']
  #   ports:
  #     - 8200:8200
  #   command: >
  #     apm-server -e
  #       -E apm-server.rum.enabled=true
  #       -E setup.kibana.host=kibana:5601
  #       -E setup.template.settings.index.number_of_replicas=0
  #       -E apm-server.kibana.enabled=true
  #       -E apm-server.kibana.host=kibana:5601
  #       -E output.elasticsearch.hosts=["elasticsearch:9200"]
  #   healthcheck:
  #     interval: 10s
  #     retries: 12
  #     test: curl --write-out 'HTTP %{http_code}' --fail --silent --output /dev/null http://localhost:8200/

  # elasticsearch:
  #   image: docker.elastic.co/elasticsearch/elasticsearch:7.15.0
  #   environment:
  #     - bootstrap.memory_lock=true
  #     - cluster.name=docker-cluster
  #     - cluster.routing.allocation.disk.threshold_enabled=false
  #     - discovery.type=single-node
  #     - ES_JAVA_OPTS=-XX:UseAVX=2 -Xms1g -Xmx1g
  #   ulimits:
  #     memlock:
  #       hard: -1
  #       soft: -1
  #   volumes:
  #     - esdata:/usr/share/elasticsearch/data
  #   ports:
  #     - 9200:9200
  #   healthcheck:
  #     interval: 20s
  #     retries: 10
  #     test: curl -s http://localhost:9200/_cluster/health | grep -vq '"status":"red"'

  # kibana:
  #   image: docker.elastic.co/kibana/kibana:7.15.0
  #   depends_on:
  #     elasticsearch:
  #       condition: service_healthy
  #   environment:
  #     ELASTICSEARCH_URL: http://elasticsearch:9200
  #     ELASTICSEARCH_HOSTS: http://elasticsearch:9200
  #   ports:
  #     - 5601:5601
  #   healthcheck:
  #     interval: 10s
  #     retries: 20
  #     test: curl --write-out 'HTTP %{http_code}' --fail --silent --output /dev/null http://localhost:5601/api/status

  # filebeat:
  #   image: docker.elastic.co/beats/filebeat:8.0.0-alpha2
  #   depends_on:
  #     elasticsearch:
  #       condition: service_healthy
  #   volumes:
  #     - logs:/logs
  #     - ./filebeat.yml:/usr/share/filebeat/filebeat.yml
# volumes:
#   bulk-files:
#   spike-utils:
#   ais-excel-files:
#   tea-utils:
#   logs:
#   esdata:
#     driver: local
