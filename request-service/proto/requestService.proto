syntax = "proto3";

package RequestService;

service RequestService {
    rpc CreateOGRequest(CreateOGRequestReq) returns (CreateOGRequest) {}
    rpc CreateRoleRequest(CreateRoleRequestReq) returns (CreateRoleRequest) {}
    rpc GetRequestsByCommander(GetRequestsByPersonIdReq) returns (MultipleGeneralRequests){}
    rpc GetRequestsSubmittedBy(GetRequestsByPersonIdReq) returns (MultipleGeneralRequests){}
    rpc AssignRoleToEntityRequest(AssignRoleToEntityRequestReq) returns (AssignRoleToEntityRequest) {}
    rpc CreateEntityRequest(CreateEntityRequestReq) returns (CreateEntityRequest){}
    rpc GetRequestById(GetRequestByIdReq) returns (GeneralRequest) {}
    rpc RenameOGRequest(RenameOGRequestReq) returns (RenameOGRequest) {}

    rpc RenameRoleRequest(RenameRoleRequestReq) returns (RenameRoleRequest) {}
}

//Enums
enum Source{
    SOURCE_1 = 0;
    SOURCE_2 = 1;
}

enum RequestType {
    CREATE_OG = 0;
    CREATE_ROLE = 1;
    ASSIGN_ROLE_TO_ENTITY = 2;
    CREATE_ENTITY=3;
    RENAME_OG = 4;
    RENAME_ROLE = 5;
}

enum Decision{
    UNKNOWN = 0;
    APPROVED = 1;
    DENIED = 2;
}

enum Status{
    SUBMITTED = 0;
    APPROVED = 1;
    DENIED = 2;
    IN_PROGRESS = 3;
    DONE = 4;
}

enum Clearance{
    LEVEL_1=0;
    LEVEL_2=1;
    LEVEL_3=2;
    LEVEL_4=3;
    LEVEL_5=4;
    YELLOW=5;
}

enum RoleStatus{
    ENABLED=0;
    DISABLED=1;
}

enum Sex{
    MALE = 0;
    FEMALE = 1;
}

enum ServiceType{
    SOLDIER = 0;
    RESERVED = 1;
    CIVILIAN = 2;
}

enum EntityType{
    SOLDIER = 0;
    RESERVED = 1;
    CIVILIAN = 2;
}

//Reqs

message Role{
    string roleId = 1;
    string digitalIdentityUniqueId = 2;
    // string jobTitle = 3;
    // string directGroup = 4;
    // string hierarchy = 5;
    // repeated string hierarchyIds = 6;
    // string source = 7;
    // int64 createdAt = 8;
    // int64 updatedAt = 9;
}

message Entity{
    string id = 1;
    // string displayName = 2;
    // string directGroup = 3;
    // string hierarchy = 4;
    // string entityType = 5;
    // string identityCard = 6;
    // string personalNumber = 7;
    // string serviceType = 8;
    // string firstName = 9;
    // string lastName = 10;
    // string akaUnit = 11;
    // int64 dischargeDate = 12;
    // string rank = 13;
    // string mail = 14;
    // string jobTitle = 15;
    // repeated string phone = 16;
    // repeated string mobilePhone = 17;
    // string address = 18;
    // Clearance clearance = 19;
    // Sex sex = 20;
    // int64 birthday = 21;
    // int64 createdAt = 22;
    // int64 updatedAt = 23;
    // repeated DigitalIdentity digitalIdentities = 24;
}

message DigitalIdentity{
    string type = 1;
    string source = 2;
    string mail = 3;
    string uniqueId = 4;
    string entityId = 5;
    int64 createdAt = 6;
    int64 updatedAt = 7;
    bool isRoleAttachable = 8;
    Role role = 9;
}

message MultipleGeneralRequests{
    repeated GeneralRequest requests = 1;
    int32 totalCount = 2;
}

message GetRequestsByPersonIdReq{
    string id = 1;
    int32 from = 2;
    int32 to = 3;
}

message GetRequestByIdReq{
    string _id = 1;
}

message ApproverDecision{
    string approverId = 1;
    Decision approverDecision = 2;
}

message CreateOGRequestReq{
    string name = 1;
    Group parent = 2;
    string submittedBy = 3;
    optional ApproverDecision commanderDecision = 4;
    optional ApproverDecision securityDecision = 5;
    repeated string commanders = 6;
    Source source = 7;
    optional Status status=8;
}

message CreateRoleRequestReq{
    string jobTitle = 1;
    Group parent = 2;
    string submittedBy = 3;
    optional ApproverDecision commanderDecision = 4;
    optional ApproverDecision securityDecision = 5;
    repeated string commanders = 6;
    Source source = 7;
    Clearance clearance = 8;
    RoleStatus roleStatus = 9;
    optional Status status = 10;
}

message AssignRoleToEntityRequestReq{
    Entity entity = 1;
    Role role = 2;
    string submittedBy = 3;
    optional ApproverDecision commanderDecision = 4;
    optional ApproverDecision securityDecision = 5;
    repeated string commanders = 6;
    Source source = 7;
    optional Status status=8;
}

message CreateEntityRequestReq{
    required string firstName = 1;
    optional string lastName = 2;
    optional string entityCard = 3;
    required string personalNumber = 4;
    optional ServiceType serviceType = 5;
    repeated string phone = 6;
    repeated string mobilePhone = 7;
    string address = 8;
    Sex sex = 9;
    int64 birthdate = 10;
    string submittedBy = 11;
    ApproverDecision commanderDecision = 12;
    ApproverDecision securityDecision = 13;
    repeated string commanders = 14;
    Source source = 15;
    Status status = 16;
    optional EntityType entityType = 17;
}

message RenameOGRequestReq{
    string submittedBy = 1;
    optional ApproverDecision commanderDecision = 2;
    optional ApproverDecision securityDecision = 3;
    repeated string commanders = 4;
    Source source = 5;
    optional Status status=6;
    Group group = 7;
    string newName = 8;
}

message RenameRoleRequestReq{
    string submittedBy = 1;
    optional ApproverDecision commanderDecision = 2;
    optional ApproverDecision securityDecision = 3;
    repeated string commanders = 4;
    Source source = 5;
    optional Status status=6;

    Role role = 7;
    string newName = 8;
}

//Requests

message RenameRoleRequest{
    string _id = 1;
    string submittedBy = 2;
    optional ApproverDecision commanderDecision = 3;
    optional ApproverDecision securityDecision = 4;
    repeated string commanders = 5;
    Source source = 6;
    optional Status status = 7;
    RequestType type = 8;
    int64 createdAt = 9;
    int64 updatedAt = 10; 

    Role role = 11;
    string newName = 12;
}

message BaseRequest{
    string _id = 1;
    string submittedBy = 2;
    optional ApproverDecision commanderDecision = 3;
    optional ApproverDecision securityDecision = 4;
    repeated string commanders = 5;
    Source source = 6;
    optional Status status = 7;
    RequestType type = 8;
    int64 createdAt = 9;
    int64 updatedAt = 10; 
}

message RenameOGRequest{
    string _id = 1;
    string submittedBy = 2;
    optional ApproverDecision commanderDecision = 3;
    optional ApproverDecision securityDecision = 4;
    repeated string commanders = 5;
    Source source = 6;
    optional Status status = 7;
    RequestType type = 8;
    int64 createdAt = 9;
    int64 updatedAt = 10; 

    Group group = 11;
    string newName = 12;
}

message CreateEntityRequest{
    string _id = 1;
    RequestType type = 2;
    string submittedBy = 3;
    ApproverDecision commanderDecision = 4;
    ApproverDecision securityDecision = 5;
    repeated string commanders = 6;
    Source source = 7;
    Status status = 8;
    int64 createdAt = 9;
    int64 updatedAt = 10; 

    required string firstName = 11;
    optional string lastName = 12;
    optional string entityCard = 13;
    required string personalNumber = 14;
    ServiceType serviceType = 15;
    repeated string phone = 16;
    repeated string mobilePhone = 17;
    string address = 18;
    Sex sex = 19;
    int64 birthdate = 20;
    EntityType entityType = 21;
    string generatedKartoffelId = 22;

}

message AssignRoleToEntityRequest{
    string _id = 1;
    string submittedBy = 2;
    optional ApproverDecision commanderDecision = 3;
    optional ApproverDecision securityDecision = 4;
    repeated string commanders = 5;
    Source source = 6;
    optional Status status = 7;
    RequestType type = 8;
    int64 createdAt = 9;
    int64 updatedAt = 10; 

    Entity entity = 11;
    Role role = 12;

}

message CreateOGRequest{
    string _id = 1;
    string submittedBy = 2;
    optional ApproverDecision commanderDecision = 3;
    optional ApproverDecision securityDecision = 4;
    repeated string commanders = 5;
    Source source = 6;
    optional Status status = 7;
    RequestType type = 8;
    int64 createdAt = 9;
    int64 updatedAt = 10; 

    string name = 11;
    Group parent = 12;
    string generatedKartoffelId = 13;  
}

message CreateRoleRequest{
    string _id = 1;
    string submittedBy = 2;
    optional ApproverDecision commanderDecision = 3;
    optional ApproverDecision securityDecision = 4;
    repeated string commanders = 5;
    Source source = 6;
    optional Status status = 7;
    RequestType type = 8;
    int64 createdAt = 9;
    int64 updatedAt = 10; 
    string jobTitle = 11;
    Group parent = 12;
    Clearance clearance = 13;
    RoleStatus roleStatus = 14;
    string generatedKartoffelId = 15;
}

message Group{
    string id = 1;
    string fullHierarchy = 2;
}

message GeneralRequest{
    string _id = 1;
    RequestType type = 2;
    string submittedBy = 3;
    ApproverDecision commanderDecision = 4;
    ApproverDecision securityDecision = 5;
    repeated string commanders = 6;
    Source source = 7;
    Status status = 8;
    int64 createdAt = 9;
    int64 updatedAt = 10; 
    //createOGRequest
    optional Group parent = 11;
    optional string name = 12;
    //createRoleRequest
    optional string jobTitle = 13;
    optional Clearance clearance = 14;
    optional RoleStatus roleStatus = 15;
    //assignRoleToEntityRequest
    optional Entity entity = 16;
    optional Role role = 17;
    //createEntityRequest
    optional string firstName = 18;
    optional string lastName = 19;
    optional string entityCard = 20;
    optional string personalNumber = 21;
    optional ServiceType serviceType = 22;
    repeated string phone = 23;
    repeated string mobilePhone = 24;
    optional string address = 25;
    optional Sex sex = 26;
    optional int64 birthdate = 27;
    optional string generatedKartoffelId = 28;
    optional EntityType entityType = 29;
    //renameOGRequest
    optional Group group = 30;
    optional string newName = 31;
    //renameRoleRequest
    // Role role and string newName
}