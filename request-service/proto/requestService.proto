syntax = "proto3";

package RequestService;

service RequestService {
    rpc CreateHierarchyRequest(CreateHierarchyRequestReq) returns (CreateHierarchyRequest) {}
    rpc CreateRoleRequest(CreateRoleRequestReq) returns (CreateRoleRequest) {}
    // rpc CreateRoleRequest(CreateRoleRequestReq) returns (Request) {}
    rpc GetRequestById(GetRequestByIdReq) returns (GeneralRequest) {}
}

//Enums

enum Domain{
    DOMAIN_1 = 0;
    DOMAIN_2 = 1;
}

enum RequestType {
    CREATE_HIERARCHY = 0;
}

enum Decision{
    UNKNOWN = 0;
    APPROVED = 1;
    DENIED = 2;
}

enum Status{
    SUBMITTED = 0;
    APPROVED = 1;
    DENIED = 2;
    IN_PROGRESS = 3;
    DONE = 4;
}

enum SecurityLevel{
    LEVEL_1=0;
    LEVEL_2=1;
    LEVEL_3=2;
    LEVEL_4=3;
    LEVEL_5=4;
    YELLOW=5;
}

enum RoleStatus{
    ENABLED=0;
    DISABLED=1;
}

//Reqs

message GetRequestByIdReq{
    string _id = 1;
}

message ApproverDecision{
    string approverId = 1;
    Decision approverDecision = 2;
}


message CreateHierarchyRequestReq{
    string newChild = 1;
    Group parent = 2;
    string submittedBy = 3;
    optional ApproverDecision commanderDecision = 4;
    optional ApproverDecision securityDecision = 5;
    repeated string commanders = 6;
    Domain domain = 7;
    optional Status status=8;
}

message CreateRoleRequestReq{
    string roleName = 1;
    Group parent = 2;
    string submittedBy = 3;
    optional ApproverDecision commanderDecision = 4;
    optional ApproverDecision securityDecision = 5;
    repeated string commanders = 6;
    Domain domain = 7;
    SecurityLevel securityLevel = 8;
    RoleStatus roleStatus = 9;
    optional Status status = 10;
}

//Requests

message CreateHierarchyRequest{
    string _id = 1;
    RequestType type = 2;
    string newChild = 3;
    Group parent = 4;
    string submittedBy = 5;
    ApproverDecision commanderDecision= 6;
    ApproverDecision securityDecision = 7;
    repeated string commanders = 8;
    int64 createdAt = 9;
    int64 updatedAt = 10; 
    Domain domain = 11;
    Status status=12;
}

message CreateRoleRequest{
    string _id = 1;
    RequestType type = 2;
    string roleName = 3;
    Group parent = 4;
    string submittedBy = 5;
    ApproverDecision commanderDecision = 6;
    ApproverDecision securityDecision = 7;
    repeated string commanders = 8;
    Domain domain = 9;
    SecurityLevel securityLevel = 10;
    RoleStatus roleStatus = 11;
    Status status = 12;
}

message Group{
    string id = 1;
    string hierarchy = 2;
}

message GeneralRequest{
    string _id = 1;
    RequestType type = 2;
    optional string roleName = 3;
    optional Group parent = 4;
    optional string newChild = 5;
    string submittedBy = 6;
    ApproverDecision commanderDecision = 7;
    ApproverDecision securityDecision = 8;
    repeated string commanders = 9;
    Domain domain = 10;
    optional SecurityLevel securityLevel = 11;
    optional RoleStatus roleStatus = 12;
    Status status = 13;
}