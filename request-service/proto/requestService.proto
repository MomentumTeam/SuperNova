syntax = "proto3";

package RequestService;

service RequestService {
    rpc CreateOGRequest(CreateOGRequestReq) returns (CreateOGRequest) {}
    rpc CreateRoleRequest(CreateRoleRequestReq) returns (CreateRoleRequest) {}
    rpc CreateEntityRequest(CreateEntityRequestReq) returns (CreateEntityRequest){}

    rpc GetRequestsByCommander(GetRequestsByPersonIdReq) returns (MultipleGeneralRequests){}
    rpc GetRequestsSubmittedBy(GetRequestsByPersonIdReq) returns (MultipleGeneralRequests){}
    rpc GetRequestById(GetRequestByIdReq) returns (GeneralRequest) {}

    rpc AssignRoleToEntityRequest(AssignRoleToEntityRequestReq) returns (AssignRoleToEntityRequest) {}

    rpc RenameOGRequest(RenameOGRequestReq) returns (RenameOGRequest) {}
    rpc RenameRoleRequest(RenameRoleRequestReq) returns (RenameRoleRequest) {}
    rpc EditEntityRequest(EditEntityRequestReq) returns (EditEntityRequest){}

    rpc DeleteOGRequest(DeleteOGRequestReq) returns (DeleteOGRequest){}
    rpc DeleteRoleRequest(DeleteRoleRequestReq) returns (DeleteRoleRequest){}
}

//Enums

enum Source{
    SOURCE_1 = 0;
    SOURCE_2 = 1;
}

enum RequestType {
    CREATE_OG = 0;
    CREATE_ROLE = 1;
    ASSIGN_ROLE_TO_ENTITY = 2;
    CREATE_ENTITY=3;
    RENAME_OG = 4;
    RENAME_ROLE = 5;
    EDIT_ENTITY = 6;
    DELETE_OG = 7;
    DELETE_ROLE = 8;
}

enum Decision{
    UNKNOWN = 0;
    APPROVED = 1;
    DENIED = 2;
}

enum Status{
    SUBMITTED = 0;
    APPROVED = 1;
    DENIED = 2;
    IN_PROGRESS = 3;
    DONE = 4;
}

enum Clearance{
    LEVEL_1=0;
    LEVEL_2=1;
    LEVEL_3=2;
    LEVEL_4=3;
    LEVEL_5=4;
    YELLOW=5;
}

enum RoleStatus{
    ENABLED=0;
    DISABLED=1;
}

enum Sex{
    MALE = 0;
    FEMALE = 1;
}

enum ServiceType{
    SOLDIER = 0;
    RESERVED = 1;
    CIVILIAN = 2;
}

enum EntityType{
    SOLDIER = 0;
    RESERVED = 1;
    CIVILIAN = 2;
}

enum OGStatus{
    ACTIVE = 0;
    IN_ACTIVE = 1;
}

//Reqs

message OrganizationGroupMin{
    optional string id = 1;
    optional string hierarchy = 2;
    optional string name = 3;
    optional Group parent = 4;
}

message OrganizationGroup{
    optional string id = 1;
    optional string hierarchy = 2;
    optional string name = 3;
    optional Group parent = 4;

    optional Source source = 5;
    repeated string ancestors = 6;
    optional OGStatus status = 7;
    optional bool isLeaf = 8;
    optional int64 createdAt = 9;
    optional int64 updatedAt = 10;
    repeated Entity directEntities = 11;
    repeated Role directRoles = 12;
}

message RoleMin{
    optional string roleId = 1;
    optional string jobTitle = 2;
    optional string digitalIdentityUniqueId = 3;
    optional Source source = 4;
}

message Role{
    optional string roleId = 1;
    optional string jobTitle = 2;
    optional string digitalIdentityUniqueId = 3;

    optional string directGroup = 4;
    optional string hierarchy = 5;
    repeated string hierarchyIds = 6;
    optional Source source = 7;
    optional int64 createdAt = 8;
    optional int64 updatedAt = 9;
}

message EntityMin{
    optional string id = 1;
    required string firstName = 2;
    optional string lastName = 3;
    required string identityCard = 4;
    optional string personalNumber = 5;
    optional ServiceType serviceType = 6;
    repeated string phone = 7;
    repeated string mobilePhone = 8;
    optional string address = 9;
    optional Sex sex = 10;
    optional int64 birthdate = 11;
    optional EntityType entityType = 12;
    optional Clearance clearance = 13;
}

message Entity{
    optional string id = 1;
    required string firstName = 2;
    optional string lastName = 3;
    required string identityCard = 4;
    optional string personalNumber = 5;
    optional ServiceType serviceType = 6;
    repeated string phone = 7;
    repeated string mobilePhone = 8;
    optional string address = 9;
    optional Sex sex = 10;
    optional int64 birthdate = 11;
    optional EntityType entityType = 12;
    optional Clearance clearance = 13;

    optional string displayName = 14;
    optional string directGroup = 15;
    optional string hierarchy = 16;
    optional string akaUnit = 17;
    optional int64 dischargeDate = 18;
    optional string rank = 19;
    optional string mail = 20;
    optional string jobTitle = 21;
    optional int64 createdAt = 22;
    optional int64 updatedAt = 23;
    repeated DigitalIdentity digitalIdentities = 24;
}

message DigitalIdentityMin{
    optional string uniqueId = 1;
}


message DigitalIdentity{
    optional string uniqueId = 1;

    optional string type = 2;
    optional string source = 3;
    optional string mail = 4;
    optional string entityId = 5;
    optional int64 createdAt = 6;
    optional int64 updatedAt = 7;
    optional bool isRoleAttachable = 8;
    optional Role role = 9;
}

message MultipleGeneralRequests{
    repeated GeneralRequest requests = 1;
    int32 totalCount = 2;
}

message GetRequestsByPersonIdReq{
    string id = 1;
    int32 from = 2;
    int32 to = 3;
}

message GetRequestByIdReq{
    string _id = 1;
}

message ApproverDecision{
    string approverId = 1;
    Decision approverDecision = 2;
}

message BaseReq{
    string submittedBy = 1;
    optional ApproverDecision commanderDecision = 2;
    optional ApproverDecision securityDecision = 3;
    repeated string commanders = 4;
    Source source = 5;
    optional Status status = 6;
}

message CreateOGRequestReq{
    string submittedBy = 1;
    optional ApproverDecision commanderDecision = 2;
    optional ApproverDecision securityDecision = 3;
    repeated string commanders = 4;
    Source source = 5;
    optional Status status = 6;

    OrganizationGroupMin ogProperties = 7;
    optional OrganizationGroup createdOG = 8;
}

message CreateRoleRequestReq{
    string submittedBy = 1;
    optional ApproverDecision commanderDecision = 2;
    optional ApproverDecision securityDecision = 3;
    repeated string commanders = 4;
    Source source = 5;
    optional Status status=6;

    RoleMin roleProperties = 7;
    optional OrganizationGroupMin ogProperties = 8;
    optional Role createdRole = 9;
    optional DigitalIdentity createdDI = 10;
}

message AssignRoleToEntityRequestReq{
    string submittedBy = 1;
    optional ApproverDecision commanderDecision = 2;
    optional ApproverDecision securityDecision = 3;
    repeated string commanders = 4;
    Source source = 5;
    optional Status status=6;

    EntityMin entity = 7;
    RoleMin role = 8;
    bool needToDisconnectDI = 9;
    DigitalIdentityMin digitalIdentityToDisconnect = 10;
}

message CreateEntityRequestReq{
    string submittedBy = 1;
    optional ApproverDecision commanderDecision = 2;
    optional ApproverDecision securityDecision = 3;
    repeated string commanders = 4;
    Source source = 5;
    optional Status status=6;

    EntityMin entityProperties = 7;
    Entity createdEntity = 8;
}

message RenameOGRequestReq{
    string submittedBy = 1;
    optional ApproverDecision commanderDecision = 2;
    optional ApproverDecision securityDecision = 3;
    repeated string commanders = 4;
    Source source = 5;
    optional Status status=6;

    OrganizationGroupMin organizationGroup = 7;
    string newName = 8;
}

message RenameRoleRequestReq{
    string submittedBy = 1;
    optional ApproverDecision commanderDecision = 2;
    optional ApproverDecision securityDecision = 3;
    repeated string commanders = 4;
    Source source = 5;
    optional Status status=6;

    RoleMin role = 7;
    string newJobTitle = 8;
}

message EditEntityRequestReq{
    string submittedBy = 1;
    optional ApproverDecision commanderDecision = 2;
    optional ApproverDecision securityDecision = 3;
    repeated string commanders = 4;
    Source source = 5;
    optional Status status=6;

    EntityMin entityProperties = 7;
}

message DeleteOGRequestReq{
    string submittedBy = 1;
    optional ApproverDecision commanderDecision = 2;
    optional ApproverDecision securityDecision = 3;
    repeated string commanders = 4;
    Source source = 5;
    optional Status status = 6; 
    
    OrganizationGroupMin organizationGroup = 7;
}

message DeleteRoleRequestReq{
    string submittedBy = 1;
    optional ApproverDecision commanderDecision = 2;
    optional ApproverDecision securityDecision = 3;
    repeated string commanders = 4;
    Source source = 5;
    optional Status status = 6; 

    RoleMin role = 7;
}


//Requests

message BaseRequest{
    string _id = 1;
    string submittedBy = 2;
    optional ApproverDecision commanderDecision = 3;
    optional ApproverDecision securityDecision = 4;
    repeated string commanders = 5;
    Source source = 6;
    optional Status status = 7;
    RequestType type = 8;
    int64 createdAt = 9;
    int64 updatedAt = 10; 
}

message DeleteRoleRequest{
    string _id = 1;
    string submittedBy = 2;
    optional ApproverDecision commanderDecision = 3;
    optional ApproverDecision securityDecision = 4;
    repeated string commanders = 5;
    Source source = 6;
    optional Status status = 7;
    RequestType type = 8;
    int64 createdAt = 9;
    int64 updatedAt = 10; 

    RoleMin role = 11;
}

message DeleteOGRequest{
    string _id = 1;
    string submittedBy = 2;
    optional ApproverDecision commanderDecision = 3;
    optional ApproverDecision securityDecision = 4;
    repeated string commanders = 5;
    Source source = 6;
    optional Status status = 7;
    RequestType type = 8;
    int64 createdAt = 9;
    int64 updatedAt = 10; 
    
    OrganizationGroupMin organizationGroup = 11;

}

message EditEntityRequest{
    string _id = 1;
    string submittedBy = 2;
    optional ApproverDecision commanderDecision = 3;
    optional ApproverDecision securityDecision = 4;
    repeated string commanders = 5;
    Source source = 6;
    optional Status status = 7;
    RequestType type = 8;
    int64 createdAt = 9;
    int64 updatedAt = 10; 

    EntityMin entityProperties = 11; 
}

message RenameRoleRequest{
    string _id = 1;
    string submittedBy = 2;
    optional ApproverDecision commanderDecision = 3;
    optional ApproverDecision securityDecision = 4;
    repeated string commanders = 5;
    Source source = 6;
    optional Status status = 7;
    RequestType type = 8;
    int64 createdAt = 9;
    int64 updatedAt = 10; 

    RoleMin role = 11;
    string newJobTitle = 12;
}

message RenameOGRequest{
    string _id = 1;
    string submittedBy = 2;
    optional ApproverDecision commanderDecision = 3;
    optional ApproverDecision securityDecision = 4;
    repeated string commanders = 5;
    Source source = 6;
    optional Status status = 7;
    RequestType type = 8;
    int64 createdAt = 9;
    int64 updatedAt = 10; 

    OrganizationGroupMin organizationGroup = 11;
    string newName = 12;
}

message CreateEntityRequest{
    string _id = 1;
    RequestType type = 2;
    string submittedBy = 3;
    ApproverDecision commanderDecision = 4;
    ApproverDecision securityDecision = 5;
    repeated string commanders = 6;
    Source source = 7;
    Status status = 8;
    int64 createdAt = 9;
    int64 updatedAt = 10; 

    EntityMin entityProperties = 11;
    Entity createdEntity = 12;
}

message AssignRoleToEntityRequest{
    string _id = 1;
    string submittedBy = 2;
    optional ApproverDecision commanderDecision = 3;
    optional ApproverDecision securityDecision = 4;
    repeated string commanders = 5;
    Source source = 6;
    optional Status status = 7;
    RequestType type = 8;
    int64 createdAt = 9;
    int64 updatedAt = 10; 

    EntityMin entity = 11;
    RoleMin role = 12;
    bool needToDisconnectDI = 13;
    DigitalIdentityMin digitalIdentityToDisconnect = 14;
}

message CreateOGRequest{
    string _id = 1;
    string submittedBy = 2;
    optional ApproverDecision commanderDecision = 3;
    optional ApproverDecision securityDecision = 4;
    repeated string commanders = 5;
    Source source = 6;
    optional Status status = 7;
    RequestType type = 8;
    int64 createdAt = 9;
    int64 updatedAt = 10; 

    OrganizationGroupMin ogProperties = 11;
    optional OrganizationGroup createdOG = 12;
}

message CreateRoleRequest{
    string _id = 1;
    string submittedBy = 2;
    optional ApproverDecision commanderDecision = 3;
    optional ApproverDecision securityDecision = 4;
    repeated string commanders = 5;
    Source source = 6;
    optional Status status = 7;
    RequestType type = 8;
    int64 createdAt = 9;
    int64 updatedAt = 10;

    RoleMin roleProperties = 11;
    optional OrganizationGroupMin ogProperties = 12;
    optional Role createdRole = 13;
    optional DigitalIdentity createdDI = 14;
}

message Group{
    string id = 1;
    string fullHierarchy = 2;
}

message GeneralRequest{
    string _id = 1;
    RequestType type = 2;
    string submittedBy = 3;
    ApproverDecision commanderDecision = 4;
    ApproverDecision securityDecision = 5;
    repeated string commanders = 6;
    Source source = 7;
    Status status = 8;
    int64 createdAt = 9;
    int64 updatedAt = 10; 

    //createOGRequest
    optional OrganizationGroupMin ogProperties = 11;
    optional OrganizationGroup createdOG = 12;

    //createRoleRequest
    optional RoleMin roleProperties = 13;
    // optional OrganizationGroupMin ogProperties = 14;
    optional Role createdRole = 14;
    optional DigitalIdentity createdDI = 15;

    //assignRoleToEntityRequest
    optional EntityMin entity = 16;
    optional RoleMin role = 17;
    optional bool needToDisconnectDI = 18;
    optional DigitalIdentityMin digitalIdentityToDisconnect = 19;

    //createEntityRequest
    optional EntityMin entityProperties = 20;
    optional Entity createdEntity = 21;

    //renameOGRequest
    optional OrganizationGroupMin organizationGroup = 22;
    optional string newName = 23;

    //renameRoleRequest
    // optional RoleMin role = 11;
    optional string newJobTitle = 24;

    //EditEntityRequest
    // optional EntityMin entityProperties = 26; 
    
    //DeleteOGRequest      
    // optional OrganizationGroupMin organizationGroup = 11;

    //DeleteRoleRequest
    // optional RoleMin role = 11;
    
}